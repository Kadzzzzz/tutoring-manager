#!/bin/bash

# diagnostic-site-resources.sh
# Diagnostic complet du probl√®me d'affichage des ressources sur le site

echo "üîç DIAGNOSTIC: Nouvelles ressources ne s'affichent pas sur le site"
echo "=================================================================="

# 1. V√©rifier les fichiers du projet web
echo -e "\nüìÅ 1. V√âRIFICATION STRUCTURE PROJET WEB"
echo "----------------------------------------"

WEB_PROJECT_PATH=~/jeremy-teacher

echo "Chemin du projet web: $WEB_PROJECT_PATH"
if [ -d "$WEB_PROJECT_PATH" ]; then
    echo "‚úÖ Dossier projet web existe"

    echo -e "\nüìÑ App.vue existe:"
    if [ -f "$WEB_PROJECT_PATH/src/App.vue" ]; then
        echo "‚úÖ $WEB_PROJECT_PATH/src/App.vue"
        echo "Taille: $(wc -l < "$WEB_PROJECT_PATH/src/App.vue") lignes"
    else
        echo "‚ùå App.vue introuvable"
    fi

    echo -e "\nüìÑ translations.js existe:"
    if [ -f "$WEB_PROJECT_PATH/src/utils/translations.js" ]; then
        echo "‚úÖ $WEB_PROJECT_PATH/src/utils/translations.js"
        echo "Taille: $(wc -l < "$WEB_PROJECT_PATH/src/utils/translations.js") lignes"
    else
        echo "‚ùå translations.js introuvable"
    fi

    echo -e "\nüìÅ PDFs existent:"
    PDF_DIR="$WEB_PROJECT_PATH/public/pdfs"
    if [ -d "$PDF_DIR" ]; then
        echo "‚úÖ Dossier PDFs: $PDF_DIR"
        echo "Nombre de PDFs: $(find "$PDF_DIR" -name "*.pdf" | wc -l)"
        echo "Derniers PDFs ajout√©s:"
        find "$PDF_DIR" -name "*.pdf" -printf "%T@ %p\n" | sort -n | tail -5 | while read timestamp file; do
            date -d "@$timestamp" "+%Y-%m-%d %H:%M:%S" | tr -d '\n'
            echo " - $(basename "$file")"
        done
    else
        echo "‚ùå Dossier PDFs introuvable"
    fi

else
    echo "‚ùå ERREUR: Dossier projet web introuvable √† $WEB_PROJECT_PATH"
    echo "V√©rifiez le chemin dans fileService.js"
fi

# 2. V√©rifier les derni√®res ressources ajout√©es dans App.vue
echo -e "\nüìã 2. RESSOURCES DANS APP.VUE"
echo "------------------------------"

if [ -f "$WEB_PROJECT_PATH/src/App.vue" ]; then
    echo "Derni√®res ressources ajout√©es dans App.vue:"
    grep -n "id: '" "$WEB_PROJECT_PATH/src/App.vue" | tail -10 | while read line; do
        echo "  $line"
    done

    echo -e "\nRecherche de 'test' dans App.vue:"
    grep -n "test" "$WEB_PROJECT_PATH/src/App.vue" || echo "‚ùå Aucune ressource 'test' trouv√©e"
else
    echo "‚ùå Impossible de lire App.vue"
fi

# 3. V√©rifier les traductions
echo -e "\nüìù 3. TRADUCTIONS DANS TRANSLATIONS.JS"
echo "--------------------------------------"

if [ -f "$WEB_PROJECT_PATH/src/utils/translations.js" ]; then
    echo "Derni√®res traductions ajout√©es:"
    grep -A3 -B1 "test" "$WEB_PROJECT_PATH/src/utils/translations.js" || echo "‚ùå Aucune traduction 'test' trouv√©e"

    echo -e "\nStructure des traductions (derni√®res lignes):"
    tail -20 "$WEB_PROJECT_PATH/src/utils/translations.js"
else
    echo "‚ùå Impossible de lire translations.js"
fi

# 4. V√©rifier si le site web fonctionne
echo -e "\nüåê 4. √âTAT DU SITE WEB"
echo "---------------------"

if [ -d "$WEB_PROJECT_PATH" ]; then
    cd "$WEB_PROJECT_PATH"

    echo "Package.json existe: $([ -f package.json ] && echo "‚úÖ" || echo "‚ùå")"
    echo "Node_modules existe: $([ -d node_modules ] && echo "‚úÖ" || echo "‚ùå")"

    if [ -f package.json ]; then
        echo "Scripts disponibles dans package.json:"
        grep -A10 '"scripts"' package.json | grep -E '"(dev|serve|build)"'
    fi

    echo -e "\nPour tester le site web:"
    echo "cd $WEB_PROJECT_PATH"
    echo "npm run dev  # ou npm run serve"
    echo "Puis ouvrir http://localhost:3000 (ou le port affich√©)"
fi

# 5. V√©rifier les logs d'erreur r√©cents
echo -e "\nüìú 5. LOGS ET ERREURS"
echo "--------------------"

MANAGER_PATH=~/Documents/tutoring-manager

echo "Derni√®res modifications dans tutoring-manager:"
find "$MANAGER_PATH" -name "*.js" -printf "%T@ %p\n" | sort -n | tail -5 | while read timestamp file; do
    date -d "@$timestamp" "+%Y-%m-%d %H:%M:%S" | tr -d '\n'
    echo " - $(basename "$file")"
done

# 6. R√©sum√© et suggestions
echo -e "\nüéØ 6. R√âSUM√â ET SUGGESTIONS"
echo "============================"

echo -e "\n‚úÖ √Ä V√âRIFIER:"
echo "1. Le projet web jeremy-teacher existe et contient App.vue + translations.js"
echo "2. Les nouvelles ressources sont bien ajout√©es dans App.vue"
echo "3. Les traductions correspondantes sont ajout√©es dans translations.js"
echo "4. Les PDFs sont copi√©s dans public/pdfs/"
echo "5. Le site web d√©marre sans erreur avec 'npm run dev'"

echo -e "\nüõ†Ô∏è ACTIONS √Ä TENTER:"
echo "1. cd $WEB_PROJECT_PATH && npm run dev"
echo "2. V√©rifier la console du navigateur pour erreurs JS"
echo "3. Inspecter l'√©l√©ment pour voir si les nouvelles ressources sont dans le DOM"
echo "4. V√©rifier que le filtre/recherche ne cache pas les nouvelles ressources"

echo -e "\nüìû POUR DEBUG APPROFONDI:"
echo "1. Ouvrir DevTools sur le site web (F12)"
echo "2. Aller dans Console et v√©rifier les erreurs"
echo "3. Aller dans Network et voir si les fichiers se chargent"
echo "4. Aller dans Elements et chercher les nouvelles ressources dans le HTML"

echo -e "\nüéâ Ce diagnostic est termin√© !"